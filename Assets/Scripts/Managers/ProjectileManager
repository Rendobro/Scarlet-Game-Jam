public class ProjectileManager
{
    public static ProjectileManager Instance;
    private void Awake()
    {
        if (Instance != null && Instance != this)
            Destroy(this.gameObject);
        else
            Instance = this;
    }


    // Needs to be updated
    public GameObject SpawnProjectile(Transform transform, Projectile projectile)
    {
        GameObject newProjectile = GameObject.Instantiate(projectile.prefab, transform.position, transform.rotation, projectileParent);
        return newProjectile;
    }

    private IEnumerator MoveObjLinear(GameObject obj, Vector3 startPos, Vector3 endPos, float duration)
    {
        float elapsed = 0f;
        while (elapsed < duration)
        {
            float t = elapsed / duration;
            obj.transform.position = Vector3.Lerp(startPos, endPos, t);
            elapsed += Time.deltaTime;
        }
        obj.transform.position = endPos;
        yield break;
    }
}